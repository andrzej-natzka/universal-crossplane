{{- if .Values.upbound.controlPlane.connect }}
{{- $agentca := genCA "upbound-agent-ca" 365 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: upbound-agent-ca
  labels:
    {{- include "labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
type: kubernetes.io/tls
data:
  ca.crt: {{ $agentca.Cert | b64enc }}
  tls.crt: {{ $agentca.Cert | b64enc }}
  tls.key: {{ $agentca.Key | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: gateway-tls
  labels:
    {{- include "labelsGateway" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
type: kubernetes.io/tls
data:
  {{- $altNames := list "tenant-gateway" (printf "%s-gateway" (include "agent-name" . )) }}
  {{- $gatewayserver := genSignedCert (printf "%s-gateway" (include "agent-name" . )) nil $altNames 3650 $agentca }}
  ca.crt: {{ $agentca.Cert | b64enc }}
  tls.crt: {{ $gatewayserver.Cert | b64enc }}
  tls.key: {{ $gatewayserver.Key | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: graphql-tls
  labels:
    {{- include "labelsGraphql" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
type: kubernetes.io/tls
data:
  {{- $altNames := list "crossplane-graphql" (printf "%s-graphql" (include "agent-name" . )) }}
  {{- $graphqlserver := genSignedCert (printf "%s-graphql" (include "agent-name" . )) nil $altNames 3650 $agentca }}
  ca.crt: {{ $agentca.Cert | b64enc }}
  tls.crt: {{ $graphqlserver.Cert | b64enc }}
  tls.key: {{ $graphqlserver.Key | b64enc }}
{{- end }}