{{- if or (eq .Values.upbound.controlPlane.permission "View") (eq .Values.upbound.controlPlane.permission "Edit") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "agent-name" . }}
  labels:
    {{- include "labelsAgent" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "selectorLabelsAgent" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "selectorLabelsAgent" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "agent-name" . }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range $index, $secret := .Values.imagePullSecrets }}
      - name: {{ $secret }}
      {{- end }}
      {{ end }}
      containers:
        - name: agent
          image: "{{ .Values.agent.image.repository }}:{{ .Values.agent.image.tag }}"
          args:
          - agent
          - --tls-cert-file
          - /etc/certs/upbound-agent/tls.crt
          - --tls-key-file
          - /etc/certs/upbound-agent/tls.key
          - --graphql-ca-bundle-file
          - /etc/certs/upbound-agent/ca.crt
          - --nats-endpoint
          - nats://{{ .Values.upbound.connectHost }}:{{ .Values.upbound.connectPort | default "443" }}
          - --nats-jwt-endpoint
          - {{ .Values.upbound.apiURL }}
          - --jwt-public-key
          - $(JWT_PUBLIC_KEY)
          - --pod-name
          - $(POD_NAME)
          - --control-plane-token
          - $(CP_TOKEN)
          {{- if .Values.agent.config.debugMode }}
          - "--debug"
          {{- end }}
          {{- range $arg := .Values.agent.config.args }}
          - {{ $arg }}
          {{- end }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: CP_TOKEN
            valueFrom:
              secretKeyRef:
                name: upbound-control-plane-token
                key: token
          - name: JWT_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: upbound-agent-public-certs
                key: jwtPublicKey
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
          ports:
          - name: agent
            containerPort: 6443
            protocol: TCP
          resources:
            {{- toYaml .Values.agent.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /readyz
              port: 6443
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /livez
              port: 6443
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 30
            failureThreshold: 5
          volumeMounts:
            - mountPath: /etc/certs/upbound-agent
              name: certs
              readOnly: true
      volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: upbound-agent-tls
{{- end }}